"""Initial database structure

Revision ID: 7d7c3cb27a2e
Revises: a4b0980c6575
Create Date: 2025-03-20 00:20:37.843391

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7d7c3cb27a2e'
down_revision: Union[str, None] = 'a4b0980c6575'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('registration_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('avatar_url', sa.String(length=512), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'MODERATOR', name='user_role'), nullable=True),
    sa.Column('account_status', sa.Enum('ACTIVE', 'SUSPENDED', 'DELETED', name='account_status'), nullable=True),
    sa.Column('profile_visibility', sa.Enum('PUBLIC', 'PRIVATE', 'FRIENDS_ONLY', name='profile_visibility'), nullable=True),
    sa.Column('travel_stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index('ix_user_travel_stats', 'users', ['travel_stats'], unique=False, postgresql_using='gin')
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_path', sa.Text(), nullable=True),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_achievements_user_id'), 'achievements', ['user_id'], unique=False)
    op.create_table('report_card_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('destination', sa.String(length=255), nullable=False),
    sa.Column('main_image', sa.String(length=512), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('side_image', sa.String(length=512), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PRIVATE', 'PUBLIC', 'FRIENDS_ONLY', name='report_status'), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('comments_count', sa.Integer(), nullable=False),
    sa.CheckConstraint('end_date >= start_date', name='check_dates'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_report_card_status', 'report_card_content', ['status'], unique=False)
    op.create_index('idx_report_card_user', 'report_card_content', ['user_id'], unique=False)
    op.create_index(op.f('ix_report_card_content_id'), 'report_card_content', ['id'], unique=False)
    op.create_index(op.f('ix_report_card_content_user_id'), 'report_card_content', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('follower_id', sa.UUID(), nullable=False),
    sa.Column('following_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['following_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'following_id')
    )
    op.create_index('idx_subscriptions_follower', 'subscriptions', ['follower_id'], unique=False)
    op.create_index('idx_subscriptions_following', 'subscriptions', ['following_id'], unique=False)
    op.create_table('travel_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('location', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('visited_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('latitude >= -90 AND latitude <= 90', name='check_latitude'),
    sa.CheckConstraint('longitude >= -180 AND longitude <= 180', name='check_longitude'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_coordinates', 'travel_map', ['latitude', 'longitude'], unique=False)
    op.create_index(op.f('ix_travel_map_user_id'), 'travel_map', ['user_id'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('report_card_id', sa.Integer(), nullable=False),
    sa.Column('destination', sa.String(length=255), nullable=False),
    sa.Column('main_image', sa.String(length=512), nullable=True),
    sa.Column('html_path', sa.Text(), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PRIVATE', 'PUBLIC', 'FRIENDS_ONLY', name='report_status'), nullable=True),
    sa.ForeignKeyConstraint(['report_card_id'], ['report_card_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_card_id')
    )
    op.create_index('idx_report_status', 'reports', ['status'], unique=False)
    op.create_index('ix_report_text_content', 'reports', [sa.literal_column("to_tsvector('english', text_content)")], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_reports_user_id'), 'reports', ['user_id'], unique=False)
    op.create_table('user_report_card',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['report_card_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], )
    )
    op.create_index('idx_user_report_card', 'user_report_card', ['user_id', 'report_id'], unique=False)
    op.create_table('additional_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_type', sa.Enum('IMAGE', 'DOCUMENT', 'OTHER', name='additional_file_type'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_additional_files_report_id'), 'additional_files', ['report_id'], unique=False)
    op.create_table('collaborators',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('EDITOR', 'VIEWER', name='collaborator_role'), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('report_id', 'user_id')
    )
    op.create_table('media_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_type', sa.Enum('IMAGE', 'VIDEO', 'AUDIO', 'DOCUMENT', name='media_file_type'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('file_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_files_report_id'), 'media_files', ['report_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_media_files_report_id'), table_name='media_files')
    op.drop_table('media_files')
    op.drop_table('collaborators')
    op.drop_index(op.f('ix_additional_files_report_id'), table_name='additional_files')
    op.drop_table('additional_files')
    op.drop_index('idx_user_report_card', table_name='user_report_card')
    op.drop_table('user_report_card')
    op.drop_index(op.f('ix_reports_user_id'), table_name='reports')
    op.drop_index('ix_report_text_content', table_name='reports', postgresql_using='gin')
    op.drop_index('idx_report_status', table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_travel_map_user_id'), table_name='travel_map')
    op.drop_index('idx_coordinates', table_name='travel_map')
    op.drop_table('travel_map')
    op.drop_index('idx_subscriptions_following', table_name='subscriptions')
    op.drop_index('idx_subscriptions_follower', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_report_card_content_user_id'), table_name='report_card_content')
    op.drop_index(op.f('ix_report_card_content_id'), table_name='report_card_content')
    op.drop_index('idx_report_card_user', table_name='report_card_content')
    op.drop_index('idx_report_card_status', table_name='report_card_content')
    op.drop_table('report_card_content')
    op.drop_index(op.f('ix_achievements_user_id'), table_name='achievements')
    op.drop_table('achievements')
    op.drop_index('ix_user_travel_stats', table_name='users', postgresql_using='gin')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
